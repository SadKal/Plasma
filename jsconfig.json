{
  "compilerOptions": {
    "moduleResolution": "bundler",
    "target": "ESNext",
    "module": "ESNext",
    /**
     * svelte-preprocess cannot figure out whether you have
     * a value or a type, so tell TypeScript to enforce using
     * `import type` instead of `import` for Types.
     */
    "verbatimModuleSyntax": true,
    "isolatedModules": true,
    "resolveJsonModule": true,
    /**
     * To have warnings / errors of the Svelte compiler at the
     * correct position, enable source maps by default.
     */
    "sourceMap": true,
    "esModuleInterop": true,
    "skipLibCheck": true,
    /**
     * Typecheck JS in `.svelte` and `.js` files by default.
     * Disable this if you'd like to use dynamic types.
     */
    "checkJs": true,
    "baseUrl": ".",
    "paths": {
      "$header/*": ["src/lib/header/*"],
      "$homepage/*": ["src/lib/homepage/*"], 
      "$genres/*": ["src/lib/homepage/genres/*"],
      "$most_sold/*": ["src/lib/homepage/most_sold/*"],
      "$news/*": ["src/lib/homepage/news/*"],
      "$search/*": ["src/lib/homepage/search/*"],
      "$data/*": ["src/data/*"],
      "$stores/*": ["src/stores/*"],
      "$utils/*": ["src/lib/utils/*"],
      "$library/*": ["src/lib/library/*"],
      "$perfil/*": ["src/lib/perfil/*"]
    }
  },
  /**
   * Use global.d.ts instead of compilerOptions.types
   * to avoid limiting type declarations.
   */
  "include": ["src/**/*.d.ts", "src/**/*.js", "src/**/*.svelte"]
}
